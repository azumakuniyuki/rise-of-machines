#                           _                  _            _             
#  _   _ ___  ___ _ __     | |_ ___         __| | ___ _ __ | | ___  _   _ 
# | | | / __|/ _ \ '__|____| __/ _ \ _____ / _` |/ _ \ '_ \| |/ _ \| | | |
# | |_| \__ \  __/ | |_____| || (_) |_____| (_| |  __/ |_) | | (_) | |_| |
#  \__,_|___/\___|_|        \__\___/       \__,_|\___| .__/|_|\___/ \__, |
#                                                    |_|            |___/ 
- hosts: all
  become: true
  become_user: root
  remote_user: root
  vars:
    conf:
      home: "/home"
    user:
      username: "deploy"
      password: "$5$cNynTWN1$UFS1hSpKKOHcArUeHwypn9SQKz19oC7DOVCwUTEzUFB"
      group:    "deploy"
      uid:      "400"
      gid:      "400"
  tasks:
    - name: user-to-deploy | Group for deployment should be created
      group:
        name:  "{{ user.username }}"
        gid:   "{{ user.gid }}"
        state: "present"

    - name: user-to-deploy | RedHat | wheel Group should be created
      when: ansible_os_family == "RedHat"
      group:
        name:  "wheel"
        gid:   "10"
        state: "present"

    - name: user-to-deploy | Debian | wheel Group should be created
      when: ansible_os_family == "Debian"
      group:
        name:  "wheel"
        gid:   "11"
        state: "present"

    - name: user-to-deploy | User for deployment should be created
      user:
        name:   "{{ user.username }}"
        uid:    "{{ user.uid }}"
        group:  "{{ user.group }}"
        groups: "wheel"
        shell:  "/bin/sh"
        home:   "{{ conf.home }}/{{ user.username }}"
        password:   "{{ user.password }}"
        createhome: "yes"
        state:      "present"

    - name: user-to-deploy | Vagrant | vagrant should belong to deploy group
      when: ansible_product_name == "VirtualBox" and
            ( ansible_env.SUDO_USER == "vagrant" or ansible_user_id == "vagrant" )
      user: 
        name:   "vagrant"
        groups: "wheel,{{ user.group}}"
        state:  "present"

    # ---------------------------------------------------------------------------------------------
    - block:
        - name: user-to-deploy | Linux | sudoers.d/deploy has been created
          shell: >
            printf "Defaults secure_path = '%s'\n%%%s ALL=NOPASSWD%s ALL\n"
            '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
            {{ user.group }} : | tr "'" '"' > deploy
          args:
            chdir:   "/etc/sudoers.d"
            creates: "deploy"

        - name: user-to-deploy | Linux | sudoers.d/deploy is 0440
          file:
            path:  "/etc/sudoers.d/deploy"
            mode:  "0440"
            state: "file"
      when: ansible_system == "Linux"

    # ---------------------------------------------------------------------------------------------
    - block:
        - name: user-to-deploy | FreeBSD | sudoers.d/deploy has been created
          shell: >
            printf "Defaults secure_path = '%s'\n%%%s ALL=NOPASSWD%s ALL\n"
            '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
            {{ user.group }} : | tr "'" '"' > deploy
          args:
            chdir:   "/usr/local/etc/sudoers.d"
            creates: "deploy"

        - name: user-to-deploy | FreeBSD | sudoers.d/deploy is 0440
          file: 
            path:  "/usr/local/etc/sudoers.d/deploy"
            mode:  "0440"
            state: "file"
      when: ansible_os_family == "FreeBSD"

    # ---------------------------------------------------------------------------------------------
    - block:
        - name: user-to-deploy | OpenBSD | Check /etc/sudoers
          register: sudoers
          ignore_errors: true
          changed_when: sudoers.rc == 1
          shell: grep %{{ user.group }} /etc/sudoers
      when: ansible_system == "OpenBSD"

    # ---------------------------------------------------------------------------------------------
    - name: user-to-deploy | {{ user.group }} should be registered in /etc/sudoers
      when: sudoers.changed
      ignore_errors: true
      shell: >
        printf "%%%s ALL=NOPASSWD%s ALL\n" {{ user.group }} : >> /etc/sudoers

    - name: user-to-deploy | Authorized key should be deployed
      authorized_key:
        user: "{{ user.username }}"
        key:  "{{ lookup('file', '../.ssh/ssh.deploy-rsa.pub') }}"

